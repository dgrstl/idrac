{
    "$ref": "#/definitions/Volume",
    "$schema": "http://redfish.dmtf.org/schemas/v1/redfish-schema-v1.json",
    "copyright": "Copyright 2016-2018 Storage Networking Industry Association (SNIA), USA. All rights reserved. For the full SNIA copyright policy, see http://www.snia.org/about/corporate_info/copyright",
    "definitions": {
        "Actions": {
            "additionalProperties": false,
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "#Volume.CheckConsistency": {
                    "$ref": "#/definitions/CheckConsistency"
                },
                "#Volume.Initialize": {
                    "$ref": "#/definitions/Initialize"
                },
                "Oem": {
                    "$ref": "#/definitions/OemActions"
                }
            },
            "type": "object"
        },
        "CheckConsistency": {
            "additionalProperties": false,
            "description": "This action is used to force a check of the Volume's parity or redundant data to ensure it matches calculated values.",
            "longDescription": "This defines the name of the custom action supported on this resource.",
            "parameters": {},
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EncryptionTypes": {
            "enum": [
                "NativeDriveEncryption",
                "ControllerAssisted",
                "SoftwareAssisted"
            ],
            "enumDescriptions": {
                "ControllerAssisted": "The volume is being encrypted by the storage controller entity.",
                "NativeDriveEncryption": "The volume is utilizing the native drive encryption capabilities of the drive hardware.",
                "SoftwareAssisted": "The volume is being encrypted by software running on the system or the operating system."
            },
            "type": "string"
        },
        "Initialize": {
            "additionalProperties": false,
            "description": "This action is used to prepare the contents of the volume for use by the system. If InitializeType is not specified in the request body, the InitializeType should be Fast.",
            "longDescription": "This defines the name of the custom action supported on this resource. If InitializeType is not specified in the request body, the InitializeType should be Fast.",
            "parameters": {
                "InitializeType": {
                    "$ref": "http://redfish.dmtf.org/schemas/swordfish/v1/Volume.json#/definitions/InitializeType",
                    "description": "The type of initialization to be performed.",
                    "longDescription": "This defines the property name for the action."
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "InitializeType": {
            "enum": [
                "Fast",
                "Slow"
            ],
            "enumDescriptions": {
                "Fast": "The volume is prepared for use quickly, typically by erasing just the beginning and end of the space so that partitioning can be performed.",
                "Slow": "The volume is prepared for use slowly, typically by completely erasing the volume."
            },
            "type": "string"
        },
        "Links": {
            "additionalProperties": false,
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "Drives": {
                    "description": "An array of references to the drives which contain this volume. This will reference Drives that either wholly or only partly contain this volume.",
                    "items": {
                        "$ref": "http://redfish.dmtf.org/schemas/v1/Drive.json#/definitions/Drive"
                    },
                    "longDescription": "The value of this property shall be a reference to the resources that this volume is associated with and shall reference resources of type Drive. This property shall only contain references to Drive entities which are currently members of the Volume, not hot spare Drives which are not currently a member of the volume.",
                    "readonly": true,
                    "type": "array"
                },
                "Drives@odata.count": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/odata.v4_0_3.json#/definitions/count"
                },
                "Oem": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Oem",
                    "description": "Oem extension object.",
                    "longDescription": "This object represents the Oem property.  All values for resources described by this schema shall comply to the requirements as described in the Redfish specification."
                }
            },
            "type": "object"
        },
        "OemActions": {
            "additionalProperties": true,
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {},
            "type": "object"
        },
        "Operation": {
            "additionalProperties": false,
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "AssociatedTask": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Task.json#/definitions/Task",
                    "description": "A reference to the task associated with the operation if any.",
                    "readonly": true
                },
                "OperationName": {
                    "description": "The name of the operation.",
                    "readonly": true,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "PercentageComplete": {
                    "description": "The percentage of the operation that has been completed.",
                    "readonly": true,
                    "type": [
                        "integer",
                        "null"
                    ]
                }
            },
            "type": "object"
        },
        "RAIDType": {
            "enum": [
                "RAID0",
                "RAID1",
                "RAID3",
                "RAID4",
                "RAID5",
                "RAID6",
                "RAID10",
                "RAID01",
                "RAID6TP",
                "RAID1E",
                "RAID50",
                "RAID60",
                "RAID00",
                "RAID10E",
                "RAID1Triple",
                "RAID10Triple"
            ],
            "enumDescriptions": {
                "RAID0": "A placement policy where consecutive logical blocks of data are uniformly distributed across a set of independent storage devices without offering any form of redundancy.",
                "RAID00": "A placement policy that creates a RAID 0 stripe set over two or more RAID 0 sets.",
                "RAID01": "A data placement policy that creates a mirrored device (RAID 1) over a set of striped devices (RAID 0).",
                "RAID1": "A placement policy where each logical block of data is stored on more than one independent storage device.",
                "RAID10": "A placement policy that creates a striped device (RAID 0) over a set of mirrored devices (RAID 1).",
                "RAID10E": "A placement policy that uses a RAID 0 stripe set over two or more RAID 10 sets.",
                "RAID10Triple": "A placement policy that uses a striped device (RAID 0) over a set of triple mirrored devices (RAID 1Triple).",
                "RAID1E": "A placement policy that uses a form of mirroring implemented over a set of independent storage devices where logical blocks are duplicated on a pair of independent storage devices so that data is uniformly distributed across the storage devices.",
                "RAID1Triple": "A placement policy where each logical block of data is mirrored three times across a set of three independent storage devices.",
                "RAID3": "A placement policy using parity-based protection where logical bytes of data are uniformly distributed across a set of independent storage devices and where the parity is stored on a dedicated independent storage device.",
                "RAID4": "A placement policy using parity-based protection where logical blocks of data are uniformly distributed across a set of independent storage devices and where the parity is stored on a dedicated independent storage device.",
                "RAID5": "A placement policy using parity-based protection for storing stripes of 'n' logical blocks of data and one logical block of parity across a set of 'n+1' independent storage devices where the parity and data blocks are interleaved across the storage devices.",
                "RAID50": "A placement policy that uses a RAID 0 stripe set over two or more RAID 5 sets of independent storage devices.",
                "RAID6": "A placement policy using parity-based protection for storing stripes of 'n' logical blocks of data and two logical blocks of independent parity across a set of 'n+2' independent storage devices where the parity and data blocks are interleaved across the storage devices.",
                "RAID60": "A placement policy that uses a RAID 0 stripe set over two or more RAID 6 sets of independent storage devices.",
                "RAID6TP": "A placement policy that uses parity-based protection for storing stripes of 'n' logical blocks of data and three logical blocks of independent parity across a set of 'n+3' independent storage devices where the parity and data blocks are interleaved across the storage devices. This is commonly referred to as Triple Parity RAID. Data stored using this form of RAID is able to survive any three independent storage device failures without data loss."
            },
            "enumLongDescriptions": {
                "RAID0": "A placement policy where consecutive logical blocks of data are uniformly distributed across a set of independent storage devices without offering any form of redundancy. This is commonly referred to as data striping. This form of RAID will encounter data loss with the failure of any storage device in the set.",
                "RAID00": "A placement policy that creates a RAID 0 stripe set over two or more RAID 0 sets. This is commonly referred to as RAID 0+0. This form of data layout is not fault tolerant; if any storage device fails there will be data loss.",
                "RAID01": "A data placement policy that creates a mirrored device (RAID 1) over a set of striped devices (RAID 0). This is commonly referred to as RAID 0+1 or RAID 0/1. Data stored using this form of RAID is able to survive a single RAID 0 data set failure without data loss.",
                "RAID1": "A placement policy where each logical block of data is stored on more than one independent storage device. This is commonly referred to as mirroring. Data stored using this form of RAID is able to survive a single storage device failure without data loss.",
                "RAID10": "A placement policy that creates a striped device (RAID 0) over a set of mirrored devices (RAID 1). This is commonly referred to as RAID 1/0. Data stored using this form of RAID is able to survive storage device failures in each RAID 1 set without data loss.",
                "RAID10E": "A placement policy that uses a RAID 0 stripe set over two or more RAID 10 sets. This is commonly referred to as Enhanced RAID 10. Data stored using this form of RAID is able to survive a single device failure within each nested RAID 1 set without data loss.",
                "RAID10Triple": "A placement policy that uses a striped device (RAID 0) over a set of triple mirrored devices (RAID 1Triple). This form of RAID can survive up to two failures in each triple mirror set without data loss. ",
                "RAID1E": "A placement policy that uses a form of mirroring implemented over a set of independent storage devices where logical blocks are duplicated on a pair of independent storage devices so that data is uniformly distributed across the storage devices. This is commonly referred to as RAID 1 Enhanced. Data stored using this form of RAID is able to survive a single storage device failure without data loss.",
                "RAID1Triple": "A placement policy where each logical block of data is mirrored three times across a set of three independent storage devices. This is commonly referred to as three-way mirroring. This form of RAID can survive two device failures without data loss.",
                "RAID3": "A placement policy using parity-based protection where logical bytes of data are uniformly distributed across a set of independent storage devices and where the parity is stored on a dedicated independent storage device. Data stored using this form of RAID is able to survive a single storage device failure without data loss. If the storage devices use rotating media, they are assumed to be rotationally synchronized, and the data stripe size should be no larger than the exported block size.",
                "RAID4": "A placement policy using parity-based protection where logical blocks of data are uniformly distributed across a set of independent storage devices and where the parity is stored on a dedicated independent storage device. Data stored using this form of RAID is able to survive a single storage device failure without data loss.",
                "RAID5": "A placement policy using parity-based protection for storing stripes of 'n' logical blocks of data and one logical block of parity across a set of 'n+1' independent storage devices where the parity and data blocks are interleaved across the storage devices. Data stored using this form of RAID is able to survive a single storage device failure without data loss.",
                "RAID50": "A placement policy that uses a RAID 0 stripe set over two or more RAID 5 sets of independent storage devices. Data stored using this form of RAID is able to survive a single storage device failure within each RAID 5 set without data loss.",
                "RAID6": "A placement policy using parity-based protection for storing stripes of 'n' logical blocks of data and two logical blocks of independent parity across a set of 'n+2' independent storage devices where the parity and data blocks are interleaved across the storage devices. Data stored using this form of RAID is able to survive any two independent storage device failures without data loss.",
                "RAID60": "A placement policy that uses a RAID 0 stripe set over two or more RAID 6 sets of independent storage devices. Data stored using this form of RAID is able to survive two device failures within each RAID 6 set without data loss."
            },
            "type": "string"
        },
        "Volume": {
            "additionalProperties": false,
            "description": "Volume contains properties used to describe a volume, virtual disk, LUN, or other logical storage entity for any system.",
            "longDescription": "This resource shall be used to represent a volume, virtual disk, logical disk, LUN, or other logical storage for a Redfish implementation.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "@odata.context": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/odata.v4_0_3.json#/definitions/context"
                },
                "@odata.etag": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/odata.v4_0_3.json#/definitions/etag"
                },
                "@odata.id": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/odata.v4_0_3.json#/definitions/id"
                },
                "@odata.type": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/odata.v4_0_3.json#/definitions/type"
                },
                "Actions": {
                    "$ref": "#/definitions/Actions",
                    "description": "The available actions for this resource.",
                    "longDescription": "The Actions property shall contain the available actions for this resource."
                },
                "BlockSizeBytes": {
                    "description": "The size of the smallest addressable unit (Block) of this volume in bytes.",
                    "longDescription": "This property shall contain size of the smallest addressable unit of the associated volume.",
                    "readonly": true,
                    "type": [
                        "integer",
                        "null"
                    ],
                    "units": "By"
                },
                "CapacityBytes": {
                    "description": "The size in bytes of this Volume.",
                    "longDescription": "This property shall contain the size in bytes of the associated volume.",
                    "readonly": true,
                    "type": [
                        "integer",
                        "null"
                    ],
                    "units": "By"
                },
                "Description": {
                    "anyOf": [
                        {
                            "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Description"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "readonly": true
                },
                "Encrypted": {
                    "description": "Is this Volume encrypted.",
                    "longDescription": "This property shall contain a boolean indicator if the Volume is currently utilizing encryption or not.",
                    "readonly": false,
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "EncryptionTypes": {
                    "description": "The types of encryption used by this Volume.",
                    "items": {
                        "$ref": "#/definitions/EncryptionTypes"
                    },
                    "longDescription": "This property shall contain the types of encryption used by this Volume.",
                    "readonly": false,
                    "type": "array"
                },
                "Id": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Id",
                    "readonly": true
                },
                "Identifiers": {
                    "description": "The Durable names for the volume.",
                    "items": {
                        "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Identifier"
                    },
                    "longDescription": "This property shall contain a list of all known durable names for the associated volume.",
                    "type": "array"
                },
                "Links": {
                    "$ref": "#/definitions/Links",
                    "description": "Contains references to other resources that are related to this resource.",
                    "longDescription": "The Links property, as described by the Redfish Specification, shall contain references to resources that are related to, but not contained by (subordinate to), this resource."
                },
                "Name": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Name",
                    "readonly": true
                },
                "Oem": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Oem",
                    "description": "This is the manufacturer/provider specific extension moniker used to divide the Oem object into sections.",
                    "longDescription": "The value of this string shall be of the format for the reserved word *Oem*."
                },
                "Operations": {
                    "description": "The operations currently running on the Volume.",
                    "items": {
                        "$ref": "#/definitions/Operation"
                    },
                    "longDescription": "This property shall contain a list of all currently running on the Volume.",
                    "type": "array"
                },
                "OptimumIOSizeBytes": {
                    "description": "The size in bytes of this Volume's optimum IO size.",
                    "longDescription": "This property shall contain the optimum IO size to use when performing IO on this volume. For logical disks, this is the stripe size. For physical disks, this describes the physical sector size.",
                    "readonly": true,
                    "type": [
                        "integer",
                        "null"
                    ],
                    "units": "By"
                },
                "Status": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Status"
                },
                "VolumeType": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/VolumeType"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "deprecated": "Deprecated in favor of explicit use of RAIDType.",
                    "description": "The type of this volume.",
                    "longDescription": "This property shall contain the type of the associated Volume.",
                    "readonly": true
                }
            },
            "required": [
                "@odata.id",
                "@odata.type",
                "Id",
                "Name"
            ],
            "type": "object"
        },
        "VolumeType": {
            "enum": [
                "RawDevice",
                "NonRedundant",
                "Mirrored",
                "StripedWithParity",
                "SpannedMirrors",
                "SpannedStripesWithParity"
            ],
            "enumDescriptions": {
                "Mirrored": "The volume is a mirrored device.",
                "NonRedundant": "The volume is a non-redundant storage device.",
                "RawDevice": "The volume is a raw physical device without any RAID or other virtualization applied.",
                "SpannedMirrors": "The volume is a spanned set of mirrored devices.",
                "SpannedStripesWithParity": "The volume is a spanned set of devices which uses parity to retain redundant information.",
                "StripedWithParity": "The volume is a device which uses parity to retain redundant information."
            },
            "type": "string"
        }
    },
    "owningEntity": "SNIA",
    "title": "#Volume.v1_0_1.Volume"
}